plugins {
	id 'maven-publish'
	id 'io.github.juuxel.loom-quiltflower' version '1.8.+'
	id 'fabric-loom' version '1.3-SNAPSHOT'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

loom {
	accessWidenerPath = file("src/main/resources/lodestone.accesswidener")
}

repositories {
	maven {
		url 'https://maven.terraformersmc.com'
	}

	maven {
		name = "Modrinth"
		url = "https://api.modrinth.com/maven"
		content { includeGroup "maven.modrinth" }
	}

	maven {
		name = 'Ladysnake Mods'
		url = 'https://maven.ladysnake.org/releases'
	}

	maven {
		url = "https://mvn.devos.one/snapshots/"
	}

	maven {
		url = "https://maven.shedaniel.me/"
	}

	mavenLocal()

}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"

	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
	modImplementation include("maven.modrinth:midnightlib:${project.midnightlib_version}-fabric")

	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-base:${project.cca}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-entity:${project.cca}"
	modImplementation "dev.onyxstudios.cardinal-components-api:cardinal-components-world:${project.cca}"

	include("io.github.ladysnake:satin:${project.satin_version}")
	include(implementation(annotationProcessor("io.github.llamalad7:mixinextras-fabric:0.2.0-rc.2")))
	modImplementation include("io.github.fabricators_of_create.Porting-Lib:core:2.1.1127+1.20")
}

processResources {
	inputs.property "version", version

	filesMatching('fabric.mod.json') {
		expand "version": version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

jar {
	from("LICENSE") {
		rename { "${it}_${archivesBaseName}" }
	}
}


publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}

	repositories {
		mavenLocal()
	}
}
